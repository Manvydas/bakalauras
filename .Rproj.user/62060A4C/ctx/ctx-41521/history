install.packages("midasr")
R> data("rvsp500", package = "midasr")
library(midasr)
data("rvsp500", package = "midasr")
View(rvsp500)
spx2_rvol <- 100 * sqrt(252 * as.numeric(rvsp500[, "SPX2.rv"]))
mh <- midas_r(rv ~ mls(rv, 1:20, 1, harstep), data = list(rv = spx2_rvol),
+ start = list(rv = c(1, 1, 1)))
mh <- midas_r(rv ~ mls(rv, 1:20, 1, harstep), data = list(rv = spx2_rvol), + start = list(rv = c(1, 1, 1)))
?midas_r
rv
mh <- midas_r(rv ~ mls(rv, 1:20, 1, harstep), data = list(rv = spx2_rvol), start = list(rv = c(1, 1, 1)))
summary(mh)
View(rvsp500)
range(rvsp500$DateID)
midas_r(rv ~ mls(rv, 1:20, 1, harstep), data = list(rv = spx2_rvol), start = list(rv = c(1, 1, 1)))
View(rvsp500)
mls(rv, 1:20, 1, harstep)
rv = c(1, 1, 1)
mls(rv, 1:20, 1, harstep),
mls(rv, 1:20, 1
)
v = spx2_rvol)
v = spx2_rvol)
v = spx2_rvol)
rv = spx2_rvol
mls(rv, 1:20, 1, harstep)
View(rvsp500)
x <- 1:16
mls(x,0:3,4)
x
mls(x,0:3,3)
mls(x,0:3,2)
select_and_forecast(rv ~ mls(rv, 1:20, 1, harstep), data = list(rv = spx2_rvol), start = list(rv = c(1, 1, 1)))
select_and_forecast(rv ~ mls(rv, 1:20, 1, harstep), data = list(rv = spx2_rvol),
insample=1:1000,outsample=1000:3459,
start = list(rv = c(1, 1, 1)))
select_and_forecast(rv ~ mls(rv, 1:20, 1, harstep), data = list(rv = spx2_rvol),
insample=1:1000,outsample=1000:3459,
weights=list(x=c("nealmon","almonp")),
wstart=list(nealmon=rep(1,3),almonp=rep(1,3)),
start = list(rv = c(1, 1, 1)))
select_and_forecast(rv ~ mls(rv, 1:20, 1, harstep), from = list(rv = spx2_rvol),
insample=1:1000,outsample=1000:3459,
weights=list(x=c("nealmon","almonp")),
wstart=list(nealmon=rep(1,3),almonp=rep(1,3)),
start = list(rv = c(1, 1, 1)))
set.seed(1001)
n <- 250
trend <- c(1:n)
x <- rnorm(4 * n)
z <- rnorm(12 * n)
fn.x <- nealmon(p = c(1, -0.5), d = 8)
y <- 2 + 0.1 * trend + mls(x, 0:7, 4) %*% fn.x + rnorm(n)
select_and_forecast(y~trend+mls(y,1,1,"*")+mls(x,0,4),
from=list(x=c(4)),
to=list(x=rbind(c(14,19))),
insample=1:250,outsample=240:250,
weights=list(x=c("nealmon","almonp")),
wstart=list(nealmon=rep(1,3),almonp=rep(1,3)),
IC="AIC",
seltype="restricted",
ftype="recursive",
measures=c("MSE"),
fweights=c("EW","BICW")
)$forecasts[[1]]$forecast
select_and_forecast(y~trend+mls(y,1,1,"*")+mls(x,0,4),
from=list(x=c(4)),
to=list(x=rbind(c(14,19))),
insample=1:240,outsample=240:250,
weights=list(x=c("nealmon","almonp")),
wstart=list(nealmon=rep(1,3),almonp=rep(1,3)),
IC="AIC",
seltype="restricted",
ftype="recursive",
measures=c("MSE"),
fweights=c("EW","BICW")
)$forecasts[[1]]$forecast
select_and_forecast(y~trend+mls(y,1,1,"*")+mls(x,0,4),
from=list(x=c(4)),
to=list(x=rbind(c(14,19))),
insample=1:250,outsample=240:250,
weights=list(x=c("nealmon","almonp")),
wstart=list(nealmon=rep(1,3),almonp=rep(1,3)),
IC="AIC",
seltype="restricted",
ftype="recursive",
measures=c("MSE"),
fweights=c("EW","BICW")
)$forecasts[[1]]$forecast
select_and_forecast(y~trend+mls(y,1,1,"*")+mls(x,0,4),
from=list(x=c(4)),
to=list(x=rbind(c(14,19))),
insample=1:249,outsample=240:250,
weights=list(x=c("nealmon","almonp")),
wstart=list(nealmon=rep(1,3),almonp=rep(1,3)),
IC="AIC",
seltype="restricted",
ftype="recursive",
measures=c("MSE"),
fweights=c("EW","BICW")
)$forecasts[[1]]$forecast
select_and_forecast(y~trend+mls(y,1,1,"*")+mls(x,0,4),
from=list(x=c(4)),
to=list(x=rbind(c(14,19))),
insample=1:241,outsample=240:250,
weights=list(x=c("nealmon","almonp")),
wstart=list(nealmon=rep(1,3),almonp=rep(1,3)),
IC="AIC",
seltype="restricted",
ftype="recursive",
measures=c("MSE"),
fweights=c("EW","BICW")
)$forecasts[[1]]$forecast
select_and_forecast(y~trend+mls(y,1,1,"*")+mls(x,0,4),
from=list(x=c(4)),
to=list(x=rbind(c(14,19))),
insample=1:240,outsample=240:250,
weights=list(x=c("nealmon","almonp")),
wstart=list(nealmon=rep(1,3),almonp=rep(1,3)),
IC="AIC",
seltype="restricted",
ftype="recursive",
measures=c("MSE"),
fweights=c("EW","BICW")
)$forecasts[[1]]$forecast
select_and_forecast(y~trend+mls(y,1,1,"*")+mls(x,0,4),
from=list(x=c(4)),
to=list(x=rbind(c(14,19))),
insample=1:250,outsample=250:260,
weights=list(x=c("nealmon","almonp")),
wstart=list(nealmon=rep(1,3),almonp=rep(1,3)),
IC="AIC",
seltype="restricted",
ftype="recursive",
measures=c("MSE"),
fweights=c("EW","BICW")
)$forecasts[[1]]$forecast
select_and_forecast(y~trend+mls(y,1,1,"*")+mls(x,0,4),
from=list(x=c(4)),
to=list(x=rbind(c(14,19))),
insample=1:250,outsample=240:260,
weights=list(x=c("nealmon","almonp")),
wstart=list(nealmon=rep(1,3),almonp=rep(1,3)),
IC="AIC",
seltype="restricted",
ftype="recursive",
measures=c("MSE"),
fweights=c("EW","BICW")
)$forecasts[[1]]$forecast
?scan
x <- 1:12
mls(x, k = 2, m = 3)
fmls(x, k = 2, m = 3)
dmls(x, k = 2, m = 3)
mls(x, k = 1:2, m = 3)
mls(x, k = 1:2, m = 2:3)
fmls(x, k = 2, m = 3)
dmls(x, k = 2, m = 3)
fmls(x, k = 1, m = 3)
mls(x, k = 1, m = 3)
dmls(x, k = 1, m = 3)
%*%
??%*%
?%*%
mls(rv, 1:20, 1, harstep)
mls(rv, 1:20, 1
)
identical(mls(rv, 1:20, 1, harstep), mls(rv, 1:20, 1))
forecast(mh)
forecast(mh, newdata = list(x = rep(NA, 1), trend = 251))
forecast(mh, newdata = list(rv = rep(NA, 1), trend = 251))
View(rvsp500)
tail(spx2_rvol)
forecast(mh, newdata = list(rv = rep(NA, 1), trend = 25))
forecast(mh, newdata = list(rv = rep(NA, 1), trend = 0))
forecast(mh, newdata = list(rv = rep(NA, 1), trend = 1))
forecast(mh, newdata = list(rv = rep(NA, 1)))
mean(spx2_rvol)
spx2_rvol2<- spx2_rvol[-3459,]
spx2_rvol2<- spx2_rvol[-3459]
mh <- midas_r(rv ~ mls(rv, 1:20, 1, harstep), data = list(rv = spx2_rvol2), start = list(rv = c(1, 1, 1)))
summary(mh)
forecast(mh, newdata = list(rv = rep(NA, 1)))
spx2_rvol[3459]
tail(spx2_rvol)
harstep <- function(p, d, m) {
+ if (d != 20)
+ stop("HAR(3)-RV process requires 20 lags")
+ out <- rep(0, 20)
+ out[1] <- p[1] + p[2] / 5 + p[3] / 20
+ out[2:5] <- p[2] / 5 + p[3] / 20
+ out[6:20] <- p[3] / 20
+ out
+ }
harstep <- function(p, d, m) {if (d != 20)
stop("HAR(3)-RV process requires 20 lags")
out <- rep(0, 20)
out[1] <- p[1] + p[2] / 5 + p[3] / 20
out[2:5] <- p[2] / 5 + p[3] / 20
out[6:20] <- p[3] / 20
out
}
identical(mls(rv, 1:20, 1, harstep), mls(rv, 1:20, 1))
harstep <- function(p, d, m) {if (d != 20)
stop("HAR(3)-RV process requires 20 lags")
out <- rep(0, 20)
out[1] <- p[1] + p[2] / 5 + p[3] / 20
out[2:5] <- p[2] / 5 + p[3] / 20
out[6:20] <- p[3] / 20
out
}
data("rvsp500", package = "midasr")
spx2_rvol <- 100 * sqrt(252 * as.numeric(rvsp500[, "SPX2.rv"]))
mh <- midas_r(rv ~ mls(rv, 1:20, 1, harstep), data = list(rv = spx2_rvol),
start = list(rv = c(1, 1, 1)))
summary(mh)
mr <- midas_r(rv ~ mls(rv, 1:20, 1, nealmon), data = list(rv = spx2_rvol),
start = list(rv = c(0, 0, 0)), weight_gradients = list())
summary(mr)
ar20 <- midas_r(rv ~ mls(rv, 1:20, 1), data = list(rv = spx2_rvol),
+ start = NULL)
ar20 <- midas_r(rv ~ mls(rv, 1:20, 1), data = list(rv = spx2_rvol),
start = NULL)
summary(ar20)
forc <- average_forecast(list(ar20, mh, bm), data = list(rv = spx2_rvol),
insample = 1:1000, outsample = 1001:1100, type = "rolling",
show_progress = FALSE)
summary(mh)
summary(mr)
forc <- average_forecast(list(ar20, mh, mr), data = list(rv = spx2_rvol),
insample = 1:1000, outsample = 1001:1100, type = "rolling",
show_progress = FALSE)
forc$accuracy$individual
forc <- average_forecast(list(ar20, mh, bm), data = list(rv = spx2_rvol),
insample = 1:1000, outsample = 1001:1100, type = "rolling",
show_progress = TRUE)
forc <- average_forecast(list(ar20, mh, mr), data = list(rv = spx2_rvol),
insample = 1:1000, outsample = 1001:1100, type = "rolling",
show_progress = TRUE)
forc$accuracy$individual
View(rvsp500)
dat <- read.csv("OxfordManRealizedVolatilityIndices.csv")
setwd("~/Documents/bakalauras")
dat <- read.csv("OxfordManRealizedVolatilityIndices.csv")
getwd
getwd()
setwd("~/Documents/bakalauras/R")
dat <- read.csv("OxfordManRealizedVolatilityIndices.csv")
library(data.table)
dat <- fread("OxfordManRealizedVolatilityIndices.csv", select = 1:2)
View(dat)
View(dat)
dat <- fread("OxfordManRealizedVolatilityIndices.csv", select = 1:2, colnames = FALSE)[-1:2,]
